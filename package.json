{
  "name": "my-project",
  "version": "0.1.0",
  "description": "A highly scalable, offline-first foundation with the best DX and a focus on performance and best practices",
  "repository": {
    "type": "git",
    "url": "git://github.com/react-boilerplate/react-boilerplate.git"
  },
  "engines": {
    "npm": ">=3",
    "node": ">=5"
  },
  "author": "Eugene Musika",
  "license": "MIT",
  "scripts": {
    "analyze:clean": "rimraf stats.json",
    "preanalyze": "npm run analyze:clean",
    "analyze": "node ./internals/scripts/analyze.js",
    "extract-intl": "babel-node --presets env,stage-0 -- ./internals/scripts/extract-intl.js",
    "npmcheckversion": "node ./internals/scripts/npmcheckversion.js",
    "preinstall": "npm run npmcheckversion",
    "postinstall": "npm run build:dll",
    "prebuild": "npm run build:clean",
    "build": "cross-env NODE_ENV=production webpack --config internals/webpack/webpack.prod.babel.js --color -p --progress --hide-modules --display-optimization-bailout",
    "build:clean": "rimraf ./build",
    "build:dll": "node ./internals/scripts/dependencies.js",
    "start": "cross-env NODE_ENV=development node server",
    "start:tunnel": "cross-env NODE_ENV=development ENABLE_TUNNEL=true node server",
    "start:production": "npm run test && npm run build && npm run start:prod",
    "start:prod": "cross-env NODE_ENV=production node server",
    "presetup": "npm i chalk shelljs",
    "setup": "node ./internals/scripts/setup.js",
    "postsetup": "npm run build:dll",
    "clean": "shjs ./internals/scripts/clean.js",
    "clean:all": "npm run analyze:clean && npm run test:clean && npm run build:clean",
    "generate": "plop --plopfile internals/generators/index.js",
    "lint": "npm run lint:js",
    "lint:eslint": "eslint --ignore-path .gitignore --ignore-pattern internals/scripts",
    "lint:js": "npm run lint:eslint -- . ",
    "lint:staged": "lint-staged",
    "pretest": "npm run test:clean && npm run lint",
    "test:clean": "rimraf ./coverage",
    "test": "cross-env NODE_ENV=test jest --coverage",
    "test:watch": "cross-env NODE_ENV=test jest --watchAll",
    "coveralls": "cat ./coverage/lcov.info | coveralls"
  },
  "lint-staged": {
    "*.js": "lint:eslint"
  },
  "pre-commit": "lint:staged",

  "dependencies": {
    "babel-polyfill": "^6.26.0",
    "chalk": "^2.3.0",
    "compression": "^1.7.1",
    "cross-env": "^5.1.1",
    "express": "^4.16.2",
    "fontfaceobserver": "^2.0.13",
    "history": "^4.7.2",
    "hoist-non-react-statics": "^2.3.1",
    "immutable": "^3.8.2",
    "intl": "^1.2.5",
    "invariant": "^2.2.2",
    "ip": "^1.1.5",
    "lodash": "^4.17.4",
    "minimist": "^1.2.0",
    "prop-types": "^15.6.0",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-helmet": "^5.2.0",
    "react-intl": "^2.4.0",
    "react-loadable": "^5.3.1",
    "react-redux": "^5.0.6",
    "react-router-dom": "^4.2.2",
    "react-router-redux": "5.0.0-alpha.6",
    "redux": "^3.7.2",
    "redux-immutable": "^4.0.0",
    "redux-saga": "^0.16.0",
    "reselect": "^3.0.1",
    "sanitize.css": "^5.0.0",
    "styled-components": "^2.2.4",
    "warning": "^3.0.0",
    "whatwg-fetch": "^2.0.3"
  },
  "devDependencies": {
    "add-asset-html-webpack-plugin": "^2.1.2",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.3",
    "babel-loader": "^7.1.2",
    "babel-plugin-dynamic-import-node": "^1.2.0",
    "babel-plugin-react-intl": "^2.3.1",
    "babel-plugin-react-transform": "^3.0.0",
    "babel-plugin-styled-components": "^1.3.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
    "babel-plugin-transform-react-constant-elements": "^6.23.0",
    "babel-plugin-transform-react-inline-elements": "^6.22.0",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.10",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "circular-dependency-plugin": "^4.3.0",
    "coveralls": "^3.0.0",
    "css-loader": "^0.28.7",
    "enzyme": "^3.2.0",
    "eslint": "^3.19.0",
    "eslint-import-resolver-webpack": "^0.8.3",
    "eslint-plugin-flowtype": "^2.40.1",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jsx-a11y": "^5.1.1",
    "eslint-plugin-react": "^7.5.1",
    "eslint-plugin-redux-saga": "^0.6.0",
    "eventsource-polyfill": "^0.9.6",
    "exports-loader": "^0.6.4",
    "file-loader": "^1.1.5",
    "html-loader": "^0.5.1",
    "html-webpack-plugin": "^2.30.1",
    "image-webpack-loader": "^3.4.2",
    "imports-loader": "^0.7.1",
    "jest-cli": "^21.2.1",
    "lint-staged": "^6.0.0",
    "ngrok": "^2.2.24",
    "node-plop": "^0.9.0",
    "null-loader": "^0.1.1",
    "offline-plugin": "^4.8.5",
    "plop": "^1.9.0",
    "pre-commit": "^1.2.2",
    "react-test-renderer": "^16.2.0",
    "rimraf": "^2.6.2",
    "shelljs": "^0.7.8",
    "style-loader": "^0.19.0",
    "url-loader": "^0.6.2",
    "webpack": "^3.10.0",
    "webpack-dev-middleware": "^1.12.2",
    "webpack-hot-middleware": "^2.21.0"
  },

  "babel": {
    "plugins": [
      "styled-components"
    ],
    "presets": [
      [
        "env",
        {
          "modules": false
        }
      ],
      "react",
      "stage-0"
    ],
    "env": {
      "production": {
        "only": [
          "app"
        ],
        "plugins": [
          "transform-react-remove-prop-types",
          "transform-react-constant-elements",
          "transform-react-inline-elements"
        ]
      },
      "test": {
        "plugins": [
          "transform-es2015-modules-commonjs",
          "dynamic-import-node"
        ]
      }
    }
  },
  "eslintConfig": {
    "parser": "babel-eslint",
    "extends": [
      "eslint:recommended",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:react/recommended"
    ],
    "env": {
      "browser": true,
      "node": true,
      "jest": true,
      "es6": true
    },
    "plugins": [
      "react",
      "redux-saga",
      "jsx-a11y",
      "flowtype"
    ],
    "parserOptions": {
      "sourceType": "module",
      "ecmaVersion": 8,
      "ecmaFeatures": {
        "experimentalObjectRestSpread": true,
        "impliedStrict": true,
        "jsx": true
      }
    },
    "rules": {
			"accessor-pairs": 2,
			"array-bracket-spacing": [
				1,
				"never"
			],
			"array-callback-return": 1,
			"arrow-body-style": [
				1,
				"as-needed"
			],
			"arrow-parens": [
				1,
				"as-needed"
			],
			"block-scoped-var": 1,
			"block-spacing": [
				1,
				"always"
			],
			"brace-style": [
				1,
				"1tbs",
				{
					"allowSingleLine": true
				}
			],
			"camelcase": 1,
			"comma-dangle": 1,
			"comma-spacing": 1,
			"comma-style": 1,
			"complexity": 1,
			"computed-property-spacing": 1,
			"curly": 1,
			"dot-location": [
				1,
				"property"
			],
			"dot-notation": 1,
			"eol-last": 1,
			"for-direction": 2,
			"func-call-spacing": 1,
			"func-name-matching": 1,
			"func-style": [
				1,
				"declaration",
				{
					"allowArrowFunctions": true
				}
			],
			"generator-star-spacing": [
				1,
				{
					"before": false,
					"after": true
				}
			],
			"import/extensions": [
				1,
				{
					"css": "always",
					"scss": "always"
				}
			],
			"indent": "off",
			"indent-legacy": [
				"warn",
				"tab",
				{
					"SwitchCase": 1,
					"MemberExpression": 1,
					"FunctionDeclaration": {
						"parameters": 0
					},
					"FunctionExpression": {
						"parameters": 0
					},
					"CallExpression": {
						"parameters": 0
					},
					"VariableDeclarator": {
						"var": 2,
						"let": 2,
						"const": 3
					}
				}
			],
      "jsx-a11y/aria-props": 2,
      "jsx-a11y/heading-has-content": 0,
      "jsx-a11y/href-no-hash": 2,
      "jsx-a11y/label-has-for": 2,
      "jsx-a11y/mouse-events-have-key-events": 2,
      "jsx-a11y/role-has-required-aria-props": 2,
      "jsx-a11y/role-supports-aria-props": 2,
			"key-spacing": 1,
			"keyword-spacing": 1,
			"linebreak-style": [
				"off",
				"unix"
			],
			"max-depth": 1,
			"max-len": [
				1,
				{
					"code": 120,
					"tabWidth": 2,
					"ignoreTrailingComments": true,
					"ignoreUrls": true,
					"ignoreStrings": true,
					"ignoreTemplateLiterals": true,
					"ignoreRegExpLiterals": true
				}
			],
			"max-params": [
				1,
				{
					"max": 5
				}
			],
			"max-statements-per-line": [
				1,
				{
					"max": 2
				}
			],
			"multiline-ternary": [
        1,
				"always-multiline"
			],
      "newline-after-var": 1,
			"new-cap": 2,
			"no-array-constructor": 1,
			"no-await-in-loop": 1,
			"no-bitwise": [
				1,
				{
					"allow": [
						"~",
						"^"
					]
				}
			],
			"no-caller": 2,
			"no-confusing-arrow": [
				1,
				{
					"allowParens": true
				}
			],
			"no-console": 0,
			"no-duplicate-imports": 1,
			"no-else-return": 1,
			"no-empty": 1,
			"no-empty-function": 1,
			"no-eq-null": 2,
			"no-eval": 2,
			"no-extra-bind": 1,
			"no-extra-label": 2,
			"no-extra-parens": [
        1,
				"all",
				{
          "ignoreJSX": "all"
				}
			],
			"no-floating-decimal": 1,
      "no-global-assign": 2,
			"no-implied-eval": 2,
			"no-lone-blocks": 1,
			"no-lonely-if": 1,
			"no-loop-func": 1,
			"no-multi-str": 1,
			"no-multiple-empty-lines": [
        1,
				{
          "max": 5
				}
			],
			"no-negated-condition": 1,
			"no-nested-ternary": 1,
			"no-new-object": 1,
			"no-return-assign": 1,
			"no-return-await": 1,
			"no-script-url": 2,
			"no-self-compare": 2,
			"no-template-curly-in-string": 2,
      "no-undef-init": 1,
			"no-unmodified-loop-condition": 1,
			"no-unneeded-ternary": 1,
			"no-unused-vars": [1, {
				"argsIgnorePattern": "^_"
			}],
			"no-use-before-define": [
				2,
				{
					"functions": false
				}
			],
			"no-useless-computed-key": 1,
			"no-useless-concat": 1,
			"no-useless-constructor": 1,
			"no-useless-rename": 1,
			"no-useless-return": 1,
			"no-var": 1,
			"no-void": 2,
			"no-whitespace-before-property": 1,
			"no-with": 2,
			"object-curly-newline": [
				1,
				{
					"multiline": true
				}
			],
			"object-curly-spacing": [
				1,
				"always"
			],
			"object-shorthand": 1,
			"one-var-declaration-per-line": 1,
			"operator-assignment": 1,
			"prefer-arrow-callback": 1,
			"prefer-const": [
				1,
				{
					"ignoreReadBeforeAssign": true
				}
			],
			"prefer-destructuring": [
				1,
				{
					"array": false,
					"object": true
				}
			],
			"prefer-rest-params": 1,
			"prefer-spread": 1,
			"quote-props": [
				1,
				"as-needed"
			],
			"quotes": [
				"warn",
				"single"
			],
			"radix": [
				1,
				"as-needed"
			],
      "react/display-name": [
        1,
        {
          "ignoreTranspilerName": false
        }
      ],
      "react/forbid-prop-types": [
        1,
        {
          "forbid": [
            "any"
          ]
        }
      ],
			"react/jsx-curly-spacing": [
				1,
				{
					"when": "always",
					"children": true
				}
			],
			"react/jsx-pascal-case": 1,
			"react/jsx-wrap-multilines": 2,
			"react/no-danger": 1,
			"react/no-did-mount-set-state": 1,
			"react/no-did-update-set-state": 1,
			"react/no-multi-comp": 1,
			"react/no-set-state": 0,
			"react/prefer-es6-class": 1,
			"react/self-closing-comp": 1,
			"react/sort-comp": 1,
      "redux-saga/no-yield-in-race": 2,
      "redux-saga/yield-effects": 2,
			"require-await": 2,
      "require-yield": 0,
			"rest-spread-spacing": 1,
			"semi": [
				"warn",
				"always"
			],
			"semi-spacing": 1,
			"semi-style": 1,
			"sort-imports": 1,
			"sort-vars": 1,
			"sort-keys": 1,
			"space-before-function-paren": [
				1,
				{
					"anonymous": "never",
					"named": "always",
					"asyncArrow": "ignore"
				}
			],
			"space-in-parens": 1,
			"space-unary-ops": [
				1,
				{
					"words": true,
					"nonwords": false
				}
			],
			"spaced-comment": [
				1,
				"always",
				{
					"markers": [
						"!",
						"*",
						"?",
						"//",
						"TODO:",
						"FIXME:",
						"FUTURE:",
						"NOTE:",
						"CHANGES:"
					],
					"exceptions": [
						"-",
						"=",
						"#",
						"*"
					]
				}
			],
			"template-curly-spacing": [
				1,
				"always"
			],
			"valid-jsdoc": [
				1,
				{
					"requireParamDescription": false,
					"requireReturnDescription": false,
					"requireReturn": false
				}
			],
			"vars-on-top": 1,
			"yield-star-spacing": [
				1,
				"after"
			]
    },
    "settings": {
      "import/resolver": {
        "webpack": {
          "config": "/internals/webpack/webpack.prod.babel.js"
        }
      }
    }
  },
  "dllPlugin": {
    "path": "node_modules/react-boilerplate-dlls",
    "exclude": [
      "chalk",
      "compression",
      "cross-env",
      "express",
      "ip",
      "minimist",
      "sanitize.css"
    ],
    "include": [
      "core-js",
      "lodash",
      "eventsource-polyfill"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "app/**/*.{js,jsx}",
      "!app/**/*.test.{js,jsx}",
      "!app/*/RbGenerated*/*.{js,jsx}",
      "!app/app.js",
      "!app/global-styles.js",
      "!app/*/*/Loadable.{js,jsx}"
    ],
    "coverageThreshold": {
      "global": {
        "statements": 98,
        "branches": 91,
        "functions": 98,
        "lines": 98
      }
    },
    "moduleDirectories": [
      "node_modules",
      "app"
    ],
    "moduleNameMapper": {
      ".*\\.(css|less|styl|scss|sass)$": "<rootDir>/internals/mocks/cssModule.js",
      ".*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/image.js"
    },
    "setupTestFrameworkScriptFile": "<rootDir>/internals/testing/test-bundler.js",
    "testRegex": "tests/.*\\.test\\.js$"
  }
}
